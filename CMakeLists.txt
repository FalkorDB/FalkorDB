cmake_minimum_required ( VERSION 3.20 )

project ( falkordb )

find_package(OpenSSL REQUIRED)

add_compile_definitions ( REDIS_MODULE_TARGET REDISMODULE_EXPERIMENTAL_API )

file ( GLOB_RECURSE SOURCES "src/*.c" )
include_directories ( "src" "deps/rax" )

add_library ( falkordb SHARED ${SOURCES} )
set_target_properties(falkordb PROPERTIES LIBRARY_OUTPUT_NAME falkordb)

# define REDIS_MODULE_TARGET
add_definitions ( -DREDIS_MODULE_TARGET )

################################################################################
# libcypher-parser
################################################################################

include ( ExternalProject )
ExternalProject_Add ( parser
	SOURCE_DIR ${CMAKE_SOURCE_DIR}/deps/libcypher-parser
    CONFIGURE_COMMAND ${CMAKE_SOURCE_DIR}/deps/libcypher-parser/autogen.sh && ${CMAKE_SOURCE_DIR}/deps/libcypher-parser/configure
    BUILD_COMMAND make CFLAGS="-Wno-error=ignored-qualifiers"
	INSTALL_COMMAND ""
	BUILD_IN_SOURCE TRUE
)

# Define library libcypher-parser target
add_library(libcypher-parser STATIC IMPORTED)
add_dependencies(libcypher-parser parser)

# Set properties for library libcypher-parser
set_target_properties(libcypher-parser PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/deps/libcypher-parser/lib/src/.libs/libcypher-parser.a
    INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/libcypher-parser/lib/src
)

################################################################################
# GraphBLAS
################################################################################

add_custom_target ( GraphBLAS
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${CMAKE_SOURCE_DIR}/deps/GraphBLAS
	COMMENT "Building GraphBLAS"
)

# Define library lib-GraphBLAS target
add_library(lib-GraphBLAS STATIC IMPORTED)
add_dependencies(lib-GraphBLAS GraphBLAS)

# Set properties for library lib-GraphBLAS
set_target_properties(lib-GraphBLAS PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/deps/GraphBLAS/build/libgraphblas.dylib
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/GraphBLAS/Include
)

################################################################################
# oniguruma
################################################################################

# set options for oniguruma
set ( BUILD_SHARED_LIBS "off" )
set ( BUILD_TEST "off" )
set ( CMAKE_POSITION_INDEPENDENT_CODE "on" )
add_subdirectory ( ${CMAKE_SOURCE_DIR}/deps/oniguruma oniguruma )

add_library ( lib-oniguruma STATIC IMPORTED )
set_target_properties ( lib-oniguruma PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/oniguruma/libonig.a
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/oniguruma/src
)

################################################################################
# rax
################################################################################

add_custom_target ( rax
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${CMAKE_SOURCE_DIR}/deps/rax
	COMMENT "Building rax"
)

# Collect the object files generated by rax
file(GLOB RAX_OBJECTS ${CMAKE_SOURCE_DIR}/deps/rax/*.o)

target_sources(falkordb PRIVATE ${RAX_OBJECTS})

################################################################################
# RediSearch
################################################################################

add_custom_target ( RediSearch
	COMMAND ${CMAKE_MAKE_PROGRAM} STATIC=1 CC=$(CC) CXX=$(CXX) -C ${CMAKE_SOURCE_DIR}/deps/RediSearch
	COMMENT "Building RediSearch"
)

# Define library lib-RediSearch target
add_library ( lib-RediSearch STATIC IMPORTED )
add_dependencies ( lib-RediSearch RediSearch )

# Set properties for library lib-RediSearch
set_target_properties ( lib-RediSearch PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/deps/RediSearch/bin/macos-arm64v8-release/search-static/libredisearch-static.a
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/RediSearch/src
)

set ( VECSIM_BINDIR ${CMAKE_SOURCE_DIR}/deps/RediSearch/bin/macos-arm64v8-release/search-static/deps/VectorSimilarity/src/VecSim )

# define vector similarity target
add_library ( vector_similarity STATIC IMPORTED )
add_dependencies ( vector_similarity RediSearch )
set_target_properties ( vector_similarity PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/libVectorSimilarity.a
)

# define vector similarity spaces
add_library ( vector_similarity_spaces STATIC IMPORTED )
add_dependencies ( vector_similarity_spaces RediSearch )
set_target_properties ( vector_similarity_spaces PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/spaces/libVectorSimilaritySpaces.a
)

# define vector similarity spaces no op
add_library ( vector_similarity_spaces_no_op STATIC IMPORTED )
add_dependencies ( vector_similarity_spaces_no_op RediSearch )
set_target_properties ( vector_similarity_spaces_no_op PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/spaces/libVectorSimilaritySpaces_no_optimization.a
)

################################################################################
# utf8proc
################################################################################

add_custom_target ( utf8proc
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${CMAKE_SOURCE_DIR}/deps/utf8proc
	COMMENT "Building utf8proc"
)

add_library ( lib-utf8proc STATIC IMPORTED )
add_dependencies ( lib-utf8proc utf8proc )

set_target_properties(lib-utf8proc PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/deps/utf8proc/libutf8proc.a
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/utf8proc
)

################################################################################
# xxHash
################################################################################

add_custom_target ( xxHash
	COMMAND ${CMAKE_MAKE_PROGRAM} XXH_STATIC_LINKING_ONLY=1 -C ${CMAKE_SOURCE_DIR}/deps/xxHash
	COMMENT "Building xxHash"
)

add_library ( lib-xxHash STATIC IMPORTED )
add_dependencies ( lib-xxHash xxHash )

set_target_properties(lib-xxHash PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/deps/xxHash/libxxhash.a
	INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_SOURCE_DIR}/deps/xxHash
)

add_dependencies ( falkordb
	rax
	onig
	xxHash
	lib-utf8proc
	lib-GraphBLAS
	lib-RediSearch
	libcypher-parser 
)

# Set C++ standard version
set(CMAKE_CXX_STANDARD 11)  # Adjust the version as needed

# Use libc++
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -lstdc++")

# Link against libc++
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lstdc++")

# Link with OpenSSL
target_link_libraries ( falkordb PRIVATE OpenSSL::SSL )

# Link with libcypher-parser
target_link_libraries ( falkordb PRIVATE libcypher-parser )

# Link with GraphBLAS
target_link_libraries ( falkordb PRIVATE lib-GraphBLAS )

# Link with RediSearch
target_link_libraries ( falkordb PRIVATE lib-RediSearch )
target_link_libraries ( falkordb PRIVATE vector_similarity )
target_link_libraries ( falkordb PRIVATE vector_similarity_spaces )
target_link_libraries ( falkordb PRIVATE vector_similarity_spaces_no_op )

# Link with utf8proc
target_link_libraries ( falkordb PRIVATE lib-utf8proc )

# Link with utf8proc
target_link_libraries ( falkordb PRIVATE lib-xxHash )

# Link with oniguruma
target_link_libraries ( falkordb PRIVATE lib-oniguruma )

# Link with the standard C library
target_link_libraries(falkordb PRIVATE "-lc")

# Set linker flags for static linking
target_link_options ( falkordb PUBLIC "-static" )
