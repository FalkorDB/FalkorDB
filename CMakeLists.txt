cmake_minimum_required ( VERSION 3.20 )

project ( falkordb )

find_package(OpenSSL REQUIRED)

add_compile_definitions ( REDIS_MODULE_TARGET REDISMODULE_EXPERIMENTAL_API )

file ( GLOB_RECURSE SOURCES "src/*.c" )
include_directories ( "src" "deps/rax" )

add_library ( falkordb SHARED ${SOURCES} )

# Set the library prefix to empty to remove the "lib" prefix
set_target_properties ( falkordb PROPERTIES PREFIX "" )

# Set the shared library suffix to .so
set ( CMAKE_SHARED_LIBRARY_SUFFIX ".so" )

set_target_properties ( falkordb PROPERTIES LINKER_LANGUAGE CXX )
set_target_properties ( falkordb PROPERTIES OUTPUT_NAME "falkordb" )

# Set the output name of the shared library to libfalkordb.so
# set_target_properties(falkordb PROPERTIES OUTPUT_NAME "falkordb")

# Define XXH_STATIC_LINKING_ONLY as a compile definition
target_compile_definitions ( falkordb PRIVATE XXH_STATIC_LINKING_ONLY=1 )

# Define DEPS_DIR variable
set(DEPS_DIR ${CMAKE_SOURCE_DIR}/deps)
message("DEPS_DIR: ${DEPS_DIR}")

################################################################################
# libcypher-parser
################################################################################

include ( ExternalProject )
ExternalProject_Add ( parser
	SOURCE_DIR ${DEPS_DIR}/libcypher-parser
	CONFIGURE_COMMAND ${DEPS_DIR}/libcypher-parser/autogen.sh && ${DEPS_DIR}/libcypher-parser/configure
    BUILD_COMMAND make CFLAGS="-Wno-error=ignored-qualifiers"
	INSTALL_COMMAND ""
	BUILD_IN_SOURCE TRUE
)

# Define library libcypher-parser target
add_library(libcypher-parser STATIC IMPORTED)
add_dependencies(libcypher-parser parser)

# Set properties for library libcypher-parser
set_target_properties(libcypher-parser PROPERTIES
	IMPORTED_LOCATION ${DEPS_DIR}/libcypher-parser/lib/src/.libs/libcypher-parser.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/libcypher-parser/lib/src
)

################################################################################
# GraphBLAS
################################################################################

add_custom_target ( GraphBLAS
	COMMAND ${CMAKE_MAKE_PROGRAM} static -C ${DEPS_DIR}/GraphBLAS
	COMMENT "Building GraphBLAS"
)

# Define library lib-GraphBLAS target
add_library(lib-GraphBLAS STATIC IMPORTED)
add_dependencies(lib-GraphBLAS GraphBLAS)

# Set properties for library lib-GraphBLAS
set_target_properties(lib-GraphBLAS PROPERTIES
	IMPORTED_LOCATION ${DEPS_DIR}/GraphBLAS/build/libgraphblas.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/GraphBLAS/Include
)

################################################################################
# oniguruma
################################################################################

# Set options for oniguruma
set ( BUILD_SHARED_LIBS OFF )
set ( BUILD_TEST OFF )
set ( INSTALL_EXAMPLES OFF )
set ( INSTALL_DOCUMENTATION OFF )
set ( CMAKE_POSITION_INDEPENDENT_CODE ON )

add_subdirectory ( ${DEPS_DIR}/oniguruma EXCLUDE_FROM_ALL )

add_library ( oniguruma STATIC IMPORTED )
set_target_properties ( oniguruma PROPERTIES
	IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/build/deps/oniguruma/libonig.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/oniguruma/src
)
add_dependencies ( oniguruma onig )

################################################################################
# rax
################################################################################

add_custom_target ( rax
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${DEPS_DIR}/rax
	COMMENT "Building rax"
)

# Collect the object files generated by rax
file(GLOB RAX_OBJECTS ${DEPS_DIR}/rax/rax.o)

target_sources(falkordb PRIVATE ${RAX_OBJECTS})

################################################################################
# RediSearch
################################################################################

add_custom_target ( RediSearch
	COMMAND ${CMAKE_MAKE_PROGRAM} STATIC=1 CC=$(CC) CXX=$(CXX) -C ${DEPS_DIR}/RediSearch
	COMMENT "Building RediSearch"
)

# Define library lib-RediSearch target
add_library ( lib-RediSearch STATIC IMPORTED )
add_dependencies ( lib-RediSearch RediSearch )

# Set properties for library lib-RediSearch
set_target_properties ( lib-RediSearch PROPERTIES
	IMPORTED_LOCATION ${DEPS_DIR}/RediSearch/bin/macos-arm64v8-release/search-static/libredisearch-static.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/RediSearch/src
)

set ( VECSIM_BINDIR ${DEPS_DIR}/RediSearch/bin/macos-arm64v8-release/search-static/deps/VectorSimilarity/src/VecSim )

# define vector similarity target
add_library ( vector_similarity STATIC IMPORTED )
add_dependencies ( vector_similarity RediSearch )
set_target_properties ( vector_similarity PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/libVectorSimilarity.a
)

# define vector similarity spaces
add_library ( vector_similarity_spaces STATIC IMPORTED )
add_dependencies ( vector_similarity_spaces RediSearch )
set_target_properties ( vector_similarity_spaces PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/spaces/libVectorSimilaritySpaces.a
)

# define vector similarity spaces no op
add_library ( vector_similarity_spaces_no_op STATIC IMPORTED )
add_dependencies ( vector_similarity_spaces_no_op RediSearch )
set_target_properties ( vector_similarity_spaces_no_op PROPERTIES
	IMPORTED_LOCATION ${VECSIM_BINDIR}/spaces/libVectorSimilaritySpaces_no_optimization.a
)

################################################################################
# utf8proc
################################################################################

add_custom_target ( utf8proc
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${DEPS_DIR}/utf8proc
	COMMENT "Building utf8proc"
)

add_library ( lib-utf8proc STATIC IMPORTED )
add_dependencies ( lib-utf8proc utf8proc )

set_target_properties(lib-utf8proc PROPERTIES
	IMPORTED_LOCATION ${DEPS_DIR}/utf8proc/libutf8proc.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/utf8proc
)

################################################################################
# xxHash
################################################################################

add_custom_target ( xxHash
	COMMAND ${CMAKE_MAKE_PROGRAM} -C ${DEPS_DIR}/xxHash
	COMMENT "Building xxHash"
)

add_library ( lib-xxHash STATIC IMPORTED )
add_dependencies ( lib-xxHash xxHash )

set_target_properties(lib-xxHash PROPERTIES
	IMPORTED_LOCATION ${DEPS_DIR}/xxHash/libxxhash.a
	INTERFACE_INCLUDE_DIRECTORIES ${DEPS_DIR}/xxHash
)

add_dependencies ( falkordb
	rax
	xxHash
	oniguruma
	lib-utf8proc
	lib-GraphBLAS
	lib-RediSearch
	libcypher-parser 
)

# Link with OpenSSL
target_link_libraries ( falkordb PRIVATE OpenSSL::SSL )

# Link with libcypher-parser
target_link_libraries ( falkordb PRIVATE libcypher-parser )

# Link with GraphBLAS
target_link_libraries ( falkordb PRIVATE lib-GraphBLAS )

# Link with RediSearch
target_link_libraries ( falkordb PRIVATE lib-RediSearch )
target_link_libraries ( falkordb PRIVATE vector_similarity )
target_link_libraries ( falkordb PRIVATE vector_similarity_spaces )
target_link_libraries ( falkordb PRIVATE vector_similarity_spaces_no_op )

# Link with utf8proc
target_link_libraries ( falkordb PRIVATE lib-utf8proc )

# Link with utf8proc
target_link_libraries ( falkordb PRIVATE lib-xxHash )

# Link with oniguruma
target_link_libraries ( falkordb PRIVATE oniguruma )

# Link with the standard C library
target_link_libraries(falkordb PRIVATE "-lc")

# Set linker flags for static linking
target_link_options ( falkordb PUBLIC "-static" )
