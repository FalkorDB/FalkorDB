name: allShortestPaths-10hop-100Kpaths
description: "
         ┌────┐
         │ S0 │
         └────┘
     /     |        \
    /      |         \
   /       |          \
┌────┐   ┌────┐        ┌────┐
│ S  │   │ S  │ ...10  │ S  │
└────┘   └────┘        └────┘
     \     |          /
      \    |         /
       \   |        /
         ┌────┐
         │ S1 │
         └────┘
           .
           .
           .
┌────┐   ┌────┐        ┌────┐
│ S  │   │ S  │ ...10  │ S  │
└────┘   └────┘        └────┘
     \     |          /
      \    |         /
       \   |        /
         ┌────┐
         │ S5 │
         └────┘
"
db_config:
  init_commands:
    - ["GRAPH.QUERY", "graph", "CREATE (s0:S0) CREATE (s1:S1) WITH * UNWIND range(1, 10) AS x CREATE (s0)-[:R]->(:S)-[:R]->(s1)"]
    - ["GRAPH.QUERY", "graph", "MATCH (s1:S1) CREATE (s2:S2) WITH * UNWIND range(1, 10) AS x CREATE (s1)-[:R]->(:S)-[:R]->(s2)"]
    - ["GRAPH.QUERY", "graph", "MATCH (s1:S2) CREATE (s2:S3) WITH * UNWIND range(1, 10) AS x CREATE (s1)-[:R]->(:S)-[:R]->(s2)"]
    - ["GRAPH.QUERY", "graph", "MATCH (s1:S3) CREATE (s2:S4) WITH * UNWIND range(1, 10) AS x CREATE (s1)-[:R]->(:S)-[:R]->(s2)"]
    - ["GRAPH.QUERY", "graph", "MATCH (s1:S4) CREATE (s2:S5) WITH * UNWIND range(1, 10) AS x CREATE (s1)-[:R]->(:S)-[:R]->(s2)"]
parameters:
  num_clients: 32
  num_requests: 3000
  queries:
    - query: 'MATCH (s:S0), (t:S5) WITH * MATCH p = allShortestPaths((s)-[:R*]->(t)) RETURN count(p)'
      ratio: 1.0
kpis:
  - key: '$.OverallClientLatencies.Total.q50 '
    max_value: 3000.0
  - key: '$.OverallQueryRates.Total'
    min_value: 10
