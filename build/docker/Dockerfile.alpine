ARG BASE_IMAGE=falkordb/falkordb-compiler-alpine

ARG TARGETPLATFORM=linux/amd64

ARG BROWSER_TAG=latest

FROM $BASE_IMAGE AS compiler

FROM falkordb/falkordb-browser:$BROWSER_TAG AS browser

FROM redis:8.0.2-alpine

ENV FALKORDB_HOME=/var/lib/falkordb

ENV FALKORDB_DATA_PATH=${FALKORDB_HOME}/data

ENV FALKORDB_BIN_PATH=${FALKORDB_HOME}/bin

ENV FALKORDB_IMPORT_PATH=${FALKORDB_HOME}/import

ENV FALKORDB_TLS_PATH=${FALKORDB_HOME}/tls

ENV FALKORDB_BROWSER_PATH=${FALKORDB_HOME}/browser

# Install runtime dependencies using Alpine packages (equivalent to Debian version)
RUN apk add --no-cache libgomp openssl nodejs npm

WORKDIR ${FALKORDB_HOME}

COPY ./build/docker/run.sh ${FALKORDB_BIN_PATH}/run.sh
COPY ./build/docker/gen-certs.sh ${FALKORDB_BIN_PATH}/gen-certs.sh

# Copy the compiled FalkorDB module from the Alpine compiler
COPY --from=compiler /FalkorDB/bin/linux*/src/falkordb.so ${FALKORDB_BIN_PATH}/falkordb.so

# Copy browser files from the Alpine-based browser image
COPY --from=browser /app ${FALKORDB_BROWSER_PATH}

ENV ARCH=${TARGETPLATFORM}

ENV TLS=0

ENV BROWSER=1

EXPOSE 6379/tcp

ENV FALKORDB_ARGS="MAX_QUEUED_QUERIES 25 TIMEOUT 1000 RESULTSET_SIZE 10000"

ENTRYPOINT ["/var/lib/falkordb/bin/run.sh"]

CMD [ "redis-server", "--loadmodule", "/var/lib/falkordb/bin/falkordb.so" ]