ARG BASE_IMAGE=falkordb/falkordb-compiler-alpine

FROM $BASE_IMAGE AS compiler

FROM alpine:latest

ENV FALKORDB_HOME=/var/lib/falkordb

ENV FALKORDB_DATA_PATH=${FALKORDB_HOME}/data

ENV FALKORDB_BIN_PATH=${FALKORDB_HOME}/bin

ENV FALKORDB_IMPORT_PATH=${FALKORDB_HOME}/import

ENV FALKORDB_TLS_PATH=${FALKORDB_HOME}/tls

# Install runtime dependencies if any (FalkorDB is a Redis module, so Redis is required)
# You would typically install Redis here or use a Redis base image.
# For simplicity, let's assume we're just copying the FalkorDB module.
RUN apk add --no-cache redis

# Install runtime dependencies
RUN apk add --no-cache libgomp openssl

WORKDIR ${FALKORDB_HOME}

COPY ./build/docker/run.sh ${FALKORDB_BIN_PATH}/run.sh
COPY ./build/docker/gen-certs.sh ${FALKORDB_BIN_PATH}/gen-certs.sh

# Copy the compiled FalkorDB module from the builder stage
# Adjust the path to falkordb.so based on where it's generated by the build process.
# Common path is bin/<arch>/src/falkordb.so
COPY --from=compiler /FalkorDB/bin/linux*/src/falkordb.so ${FALKORDB_BIN_PATH}/falkordb.so

ENV ARCH=${TARGETPLATFORM}

ENV TLS=0

ENV BROWSER=0

EXPOSE 6379/tcp

ENV FALKORDB_ARGS="MAX_QUEUED_QUERIES 25 TIMEOUT 1000 RESULTSET_SIZE 10000"

ENTRYPOINT ["/var/lib/falkordb/bin/run.sh"]

CMD [ "redis-server", "--loadmodule", "/var/lib/falkordb/bin/falkordb.so" ]