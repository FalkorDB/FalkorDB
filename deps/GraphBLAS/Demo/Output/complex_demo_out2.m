
% run this output of this program as a script:

% GraphBLAS matrix A: nrows: 3 ncols 5 entries: 6
A = sparse (3,5) ;
    A (1,1) =  (  0.6606296233424496) + (  0.9460708279587872)*1i ;
    A (1,3) =  (                   0) + (  0.5437355909764924)*1i ;
    A (1,4) =  (  0.4892274845865111) + (                   0)*1i ;
    A (3,2) =  (   0.537214211497701) + (  0.3927366677319613)*1i ;
    A (3,4) =  (  0.9636279947347471) + (                   0)*1i ;
    A (3,5) =  (  0.9362395387648647) + (  0.1932763616009246)*1i ;
A

% GraphBLAS matrix B: nrows: 5 ncols 4 entries: 12
B = sparse (5,4) ;
    B (1,4) =  (                   0) + (  0.8073208487984076)*1i ;
    B (2,1) =  (  0.6630361554125466) + (                   0)*1i ;
    B (2,2) =  (  0.4290097793686153) + (                   0)*1i ;
    B (2,4) =  (                   0) + (  0.7963012789805426)*1i ;
    B (3,1) =  (                   0) + (  0.4789398381884235)*1i ;
    B (3,2) =  (                   0) + (   0.174465941751312)*1i ;
    B (3,3) =  ( 0.03575034370042069) + (  0.0454505827823905)*1i ;
    B (3,4) =  (  0.7931472431266039) + (                   0)*1i ;
    B (4,3) =  (  0.9128666744293144) + (                   0)*1i ;
    B (4,4) =  (  0.2895771348964379) + (                   0)*1i ;
    B (5,3) =  (                   0) + (  0.7385180444190567)*1i ;
    B (5,4) =  (                   0) + ( 0.05298253707866783)*1i ;
B

% GraphBLAS matrix C: nrows: 3 ncols 4 entries: 8
C = sparse (3,4) ;
    C (1,1) =  ( -0.2604166359595681) + (                   0)*1i ;
    C (1,2) =  (-0.09486334194341992) + (                   0)*1i ;
    C (1,3) =  (   0.421886367404498) + ( 0.01943873425956097)*1i ;
    C (1,4) =  ( -0.6221136105519471) + (  0.9646024532310183)*1i ;
    C (3,1) =  (  0.3561924454244184) + (  0.2603986102625343)*1i ;
    C (3,2) =  (  0.2304701503483134) + (  0.1684878711736539)*1i ;
    C (3,3) =  (  0.7369258023385522) + (  0.6914297932764274)*1i ;
    C (3,4) =  (-0.04393234899118034) + (  0.4773887097792673)*1i ;
C
E = A*B
err = norm (C-E,1)
assert (err < 1e-12)
