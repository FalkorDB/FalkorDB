name: Build on ubuntu

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-build:latest
    steps:

    - name: Safe dir
      run: git config --global --add safe.directory '*'

    - uses: actions/checkout@v3
      with:
        set-safe-directory: '*'
        submodules: recursive

    - name: Cache GraphBLAS
      id: cache_graphblas
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-release/GraphBLAS
        key: graphblas-${{ hashFiles('./deps/GraphBLAS/Include/GraphBLAS.h') }}    

    - name: Cache parser
      id: cache_parser
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-release/libcypher-parser
        key: parser-${{ hashFiles('./deps/libcypher-parser/lib/src/parser.c') }}

    - name: Cache search
      id: cache_search
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-release/search-static
        key: search-${{ hashFiles('./deps/RediSearch/src/version.h') }}

    - name: Relocate source
      run: |
        mv $GITHUB_WORKSPACE /FalkorDB
        mkdir $GITHUB_WORKSPACE

    - name: Build
      working-directory: /FalkorDB
      run: make

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: /FalkorDB
        file: /FalkorDB/CI
        platforms: linux/amd64,linux/arm64
        push: true
        tags: swilly22/falkordb-ci:latest

  sanitize-test:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-build:latest
    steps:

    - name: Safe dir
      run: git config --global --add safe.directory '*'

    - uses: actions/checkout@v3
      with:
        set-safe-directory: '*'
        submodules: recursive

    - name: Cache GraphBLAS
      id: cache_graphblas
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-debug-asan/GraphBLAS
        key: graphblas-sanitizer-${{ hashFiles('./deps/GraphBLAS/Include/GraphBLAS.h') }}

    - name: Cache parser
      id: cache_parser
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-debug-asan/libcypher-parser
        key: parser-sanitizer-${{ hashFiles('./deps/libcypher-parser/lib/src/parser.c') }}

    - name: Cache search
      id: cache_search
      uses: actions/cache@v3
      with:
        path: ./bin/linux-x64-debug-asan/search-static
        key: search-sanitizer-${{ hashFiles('./deps/RediSearch/src/version.h') }}

    - name: Build
      run: make CLANG=1 SAN=address NPROC=16

    - name: Unit tests
      run: make unit-tests CLEAR_LOGS=0 SAN=address

    - name: Flow tests
      run: make flow-tests CLEAR_LOGS=0 SAN=address

    - name: TCK tests
      run: make tck-tests CLEAR_LOGS=0 SAN=address

    - name: Fuzz tests
      run: make fuzz CLEAR_LOGS=0 SAN=address

  unit-tests:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-ci:latest
    needs: build
    steps:
      - name: Unit tests
        working-directory: /FalkorDB
        run: make unit-tests CLEAR_LOGS=0

  flow-tests:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-ci:latest
    needs: build
    steps:
      - name: Flow tests
        working-directory: /FalkorDB
        run: make CLEAR_LOGS=0 PARALLEL=4 flow-tests

  tck-tests:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-ci:latest
    needs: build
    steps:
      - name: TCK tests
        working-directory: /FalkorDB
        run: make CLEAR_LOGS=0 tck-tests

  fuzz-tests:
    runs-on: ubuntu-latest
    container: swilly22/falkordb-ci:latest
    needs: build
    steps:
      - name: Fuzz tests
        working-directory: /FalkorDB
        run: make fuzz
