name: Release image to DockerHub

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag"
        required: true
      commit_sha:
        description: "Commit SHA"
        required: true
  workflow_run:
    workflows: ["Build on ubuntu"]
    types:
      - completed
    branches: [master, "[0-9]+.[0-9]+"]
  release:
    types: [published]

env:
  BUILD_WORKFLOW_NAME: build.yml
  # Get the commit SHA from the event that triggered the workflow
  # If the event is a workflow_dispatch, use the input value
  # If the event is a workflow_run, use the head_commit.id
  # If the event is a release, use the target_commitish
  COMMIT_SHA: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.commit_sha || github.event_name == 'workflow_run' && github.event.workflow_run.head_commit.id || github.event_name == 'release' && github.event.release.target_commitish || github.sha }}

jobs:
  release:
    # Only run this job if the workflow_run event is successful or if the event is not a workflow_run
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve built image AMD
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ${{ env.BUILD_WORKFLOW_NAME }}
          commit: ${{ env.COMMIT_SHA }}
          workflow_conclusion: success
          name: falkordb-x64
          path: /tmp
          if_no_artifact_found: error

      - name: Retrieve built image ARM
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ${{ env.BUILD_WORKFLOW_NAME }}
          commit: ${{ env.COMMIT_SHA }}
          workflow_conclusion: success
          name: falkordb-arm64v8
          path: /tmp
          if_no_artifact_found: error

      - name: Load image
        run: |
          docker load -i /tmp/falkordb-x64.tar
          docker load -i /tmp/falkordb-arm64v8.tar

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest on PUSH to master
        if: ${{ github.event_name == 'workflow_run' }}
        run: |
          docker buildx imagetools create -t falkordb/falkordb:edge \
            falkordb/falkordb-x64:latest \
            falkordb/falkordb-arm64v8:latest

      - name: Create manifest on RELEASE
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx imagetools create -t falkordb/falkordb:${{ github.event.release.tag_name }} -t falkordb/falkordb:latest \
            falkordb/falkordb-x64:latest \
            falkordb/falkordb-arm64v8:latest

      - name: Create manifest on DISPATCH
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx imagetools create -t falkordb/falkordb:${{ github.event.inputs.tag }} \
            falkordb/falkordb-x64:latest \
            falkordb/falkordb-arm64v8:latest

      - name: Inspect image
        run: |
          docker buildx imagetools inspect falkordb/falkordb:latest
