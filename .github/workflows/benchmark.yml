name: Benchmark build
on:
  workflow_dispatch:
  pull_request:
    branches: [ master ]
    types: [opened, labeled, unlabeled, synchronize]
  push:
    branches:
      - 'master'
    tags:
      - 'v*'

jobs:
  haslabel:
    name: analyse labels
    runs-on: ubuntu-latest
    outputs:
      benchmark: ${{ steps.haslabel.outputs.labeled-run-benchmark }}
    steps:
      - uses: actions/checkout@v4
      - name: Labeled with run-benchmark
        id: haslabel
        uses: FalkorDB/HasLabel@v1.0.5
        with:
          contains: 'run-benchmark'

# For now I wrote them manually
# Still trying to think of how to overcome sending each one to a specific runner
# Matrix does not allow me to do that
  create-runner-A:
    needs: haslabel
    if: needs.haslabel.outputs.benchmark
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.create-runner.outputs.label }}
    steps:
      - name: Create Runner For Benchmarak
        id: create-runner
        uses: FalkorDB/gce-github-runner@install_docker
        with:
          token: ${{ secrets.GH_SA_TOKEN }}
          project_id: github-runners-414914
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          machine_zone: us-central1-a
          machine_type: n4-highcpu-8
          network: gh-runner

  run-benchmark-A:
    needs:
      - create-runner-A
    runs-on: ${{ needs.create-runner-A.outputs.label }}
    container: falkordb/falkordb-build:ubuntu
    steps:
      - name: Safe dir
        run: git config --global --add safe.directory '*'

      - uses: actions/checkout@v4
        with:
          set-safe-directory: '*'
          submodules: recursive

      - name: Cache GraphBLAS
        id: cache_graphblas
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/GraphBLAS
          key: graphblas-x64-${{ hashFiles('./deps/GraphBLAS/Include/GraphBLAS.h') }}

      - name: Cache parser
        id: cache_parser
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/libcypher-parser
          key: parser-x64-${{ hashFiles('./deps/libcypher-parser/lib/src/parser.c') }}

      - name: Cache search
        id: cache_search
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/search-static
          key: search-x64-${{ hashFiles('./deps/RediSearch/src/version.h') }}

      - name: Build
        run: |
          rustup toolchain list
          rustup default nightly
          apt-get update
          apt-get install -y clang libomp-dev libc6-dbg python3-venv python3-pip lsb-release
          python3 -m venv venv
          . venv/bin/activate
          pip install -r tests/requirements.txt
          curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg && \
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list
          apt update && apt install -y redis
          make $(j16)
        continue-on-error: true

      - name: Install benchmark dependencies
        working-directory: tests/benchmarks
        run: pip3 install -r requirements.txt

      - name: Run benchmark
        working-directory: tests/benchmarks
        run: python3 run_benchmarks.py GroupA

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: GroupA-results.tar.gz
          path: tests/benchmarks/GroupA/GroupA-results.tar.gz
          if-no-files-found: error

  create-runner-B:
    needs: haslabel
    if: needs.haslabel.outputs.benchmark
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.create-runner.outputs.label }}
    steps:
      - name: Create Runner For Benchmarak
        id: create-runner
        uses: FalkorDB/gce-github-runner@install_docker
        with:
          token: ${{ secrets.GH_SA_TOKEN }}
          project_id: github-runners-414914
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          machine_zone: us-central1-a
          machine_type: n4-highcpu-8
          network: gh-runner


  run-benchmark-B:
    needs:
      - create-runner-B
    runs-on: ${{ needs.create-runner-B.outputs.label }}
    container: falkordb/falkordb-build:ubuntu
    steps:
      - name: Safe dir
        run: git config --global --add safe.directory '*'

      - uses: actions/checkout@v4
        with:
          set-safe-directory: '*'
          submodules: recursive

      - name: Cache GraphBLAS
        id: cache_graphblas
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/GraphBLAS
          key: graphblas-x64-${{ hashFiles('./deps/GraphBLAS/Include/GraphBLAS.h') }}

      - name: Cache parser
        id: cache_parser
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/libcypher-parser
          key: parser-x64-${{ hashFiles('./deps/libcypher-parser/lib/src/parser.c') }}

      - name: Cache search
        id: cache_search
        uses: actions/cache@v4
        with:
          path: ./bin/linux-x64-release/search-static
          key: search-x64-${{ hashFiles('./deps/RediSearch/src/version.h') }}

      - name: Build
        run: |
          rustup toolchain list
          rustup default nightly
          apt-get update
          apt-get install -y clang libomp-dev libc6-dbg python3-venv python3-pip lsb-release
          python3 -m venv venv
          . venv/bin/activate
          pip install -r tests/requirements.txt
          curl -fsSL https://packages.redis.io/gpg | gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg && \
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/redis.list
          apt update && apt install -y redis
          make $(j16)
        continue-on-error: true

      - name: Install benchmark dependencies
        working-directory: tests/benchmarks
        run: pip3 install -r requirements.txt

      - name: Run benchmark
        working-directory: tests/benchmarks
        run: python3 run_benchmarks.py GroupB

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: GroupB-results.tar.gz
          path: tests/benchmarks/GroupB/GroupB-results.tar.gz
          if-no-files-found: error